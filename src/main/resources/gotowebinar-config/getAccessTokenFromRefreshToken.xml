<?xml version="1.0" encoding="UTF-8"?>
<!--
~  Copyright (c) 2016, WSO2 Inc. (http://wso2.com) All Rights Reserved.
~
~  WSO2 Inc. licenses this file to you under the Apache License,
~  Version 2.0 (the "License"); you may not use this file except
~  in compliance with the License.
~  You may obtain a copy of the License at
~
~   http://www.apache.org/licenses/LICENSE-2.0
~
~  Unless required by applicable law or agreed to in writing,
~  software distributed under the License is distributed on an
~  "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
~  KIND, either express or implied.  See the License for the
~  specific language governing permissions and limitations
~  under the License.
-->
<template name="getAccessTokenFromRefreshToken" xmlns="http://ws.apache.org/ns/synapse">
    <parameter name="clientId"
               description="clientId of your App, given by google console when you registered your application"/>
    <parameter name="refreshToken" description="Refresh token to exchange with an access token."/>
    <sequence>
        <property name="uri.var.refreshToken" expression="$func:refreshToken"/>
        <property name="uri.var.clientId" expression="$func:clientId"/>
        <call>
            <endpoint>
                <http method="get"
                      uri-template="https://api.citrixonline.com/oauth/access_token?client_id={uri.var.clientId}&amp;refresh_token={uri.var.refreshToken}&amp;grant_type=refresh_token"/>
            </endpoint>
        </call>
        <!-- Remove custom Headers from the API Response -->
        <header name="Content-Encoding" action="remove" scope="transport"/>
        <header name="Transfer-Encoding" action="remove" scope="transport"/>
        <!-- Setting the new access token to the property. -->
        <property name="uri.var.accessToken" expression="json-eval($.access_token)"/>
        <property name="uri.var.refreshToken" expression="json-eval($.refresh_token)"/>
        <property name="uri.var.organizerKey" expression="json-eval($.organizer_key)"/>
        <property name="systemTime" expression="$ctx:SYSTEM_TIME" scope="default"/>
        <script language="js">
            <![CDATA[
             importPackage(Packages.org.apache.synapse.config);
             var newAccessToken = mc.getProperty('uri.var.accessToken');
             var newRefreshToken = mc.getProperty('uri.var.refreshToken');
             var newSystemTime = mc.getProperty('systemTime');
             var newAccessRegistryPath = mc.getProperty('uri.var.accessTokenRegistryPath');
             var newRefreshRegistryPath = mc.getProperty('uri.var.refreshTokenRegistryPath');
             var newTimeRegistryPath = mc.getProperty('uri.var.timeRegistryPath');
             if(newAccessToken != null && newAccessToken != ''){
                var existingAccessToken = mc.getConfiguration().getRegistry().getResource(newAccessRegistryPath);
                var existingTime = mc.getConfiguration().getRegistry().getResource(newTimeRegistryPath);
                if(existingAccessToken == null){
                  // Create the registry entry if no such entry exists.
                      mc.getConfiguration().getRegistry().newResource(newAccessRegistryPath, false);
                      mc.getConfiguration().getRegistry().updateResource(newAccessRegistryPath, newAccessToken);
                      mc.getConfiguration().getRegistry().newResource(newTimeRegistryPath, false);
                      mc.getConfiguration().getRegistry().updateResource(newTimeRegistryPath, newSystemTime);
                } else {
                  // Update the registry entry if it already exists.
                      mc.getConfiguration().getRegistry().updateResource(newAccessRegistryPath, newAccessToken);
                      mc.getConfiguration().getRegistry().updateResource(newTimeRegistryPath, newSystemTime);
                }
             }
             if(newRefreshToken != null && newRefreshToken != ''){
                var existingRefreshToken = mc.getConfiguration().getRegistry().getResource(newRefreshRegistryPath);
                var existingTime = mc.getConfiguration().getRegistry().getResource(newTimeRegistryPath);
                if(existingRefreshToken == null){
                  // Create the registry entry if no such entry exists.
                      mc.getConfiguration().getRegistry().newResource(newRefreshRegistryPath, false);
                      mc.getConfiguration().getRegistry().updateResource(newRefreshRegistryPath, newRefreshToken);
                } else {
                  // Update the registry entry if it already exists.
                      mc.getConfiguration().getRegistry().updateResource(newRefreshRegistryPath, newRefreshToken);
                }
             }
         ]]>
        </script>
    </sequence>
</template>